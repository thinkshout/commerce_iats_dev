<?php

/**
 * Implements hook_install().
 */
function commerceiats_demo_content_install() {
  commerceiats_demo_content_create_content();
}

/**
 * Creates content used to demo Commerce iATS.
 */
function commerceiats_demo_content_create_content() {

  $default_product_values = array(
    'type' => 'product_display_demo',
    'uid' => 1,
    'status' => 1,
    'comment' => 0,
    'promote' => 1,
  );

  // Create USD test product display.
  $product = commerce_product_load_by_sku('TEST_USD_001');

  $entity = entity_create('node', $default_product_values);
  $entity_wrapper = entity_metadata_wrapper('node', $entity);

  $entity_wrapper->title->set('Test Product (USD)');
  $entity_wrapper->field_product->set($product->product_id);

  $entity_wrapper->save();

  // Create CAD test product display.
  $product = commerce_product_load_by_sku('TEST_CAD_001');

  $entity = entity_create('node', $default_product_values);
  $entity_wrapper = entity_metadata_wrapper('node', $entity);

  $entity_wrapper->title->set('Test Product (CAD)');
  $entity_wrapper->field_product->set($product->product_id);

  $entity_wrapper->save();

  // Create GBP test product display.
  $product = commerce_product_load_by_sku('TEST_GBP_001');

  $entity = entity_create('node', $default_product_values);
  $entity_wrapper = entity_metadata_wrapper('node', $entity);

  $entity_wrapper->title->set('Test Product (GBP)');
  $entity_wrapper->field_product->set($product->product_id);

  $entity_wrapper->save();

  // Create USD recurring donation test product display.
  $product = commerce_product_load_by_sku('TEST_USD_002');

  $entity = entity_create('node', $default_product_values);
  $entity_wrapper = entity_metadata_wrapper('node', $entity);

  $entity_wrapper->title->set('Test Recurring Donation Product (USD)');
  $entity_wrapper->field_product->set($product->product_id);

  $entity_wrapper->save();
}
